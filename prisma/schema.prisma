generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                     @id @default(cuid())
  email             String                     @unique
  stripeCustomerId  String                     @unique
  createdAt         DateTime                   @default(now())
  updatedAt         DateTime                   @updatedAt
  c_organization_id String?
  litellm_team_id   String?
  balanceConfig     BalanceConfig?
  rechargeHistory   RechargeRecord[]
  organization      OrganizationBalanceConfig? @relation(fields: [c_organization_id], references: [c_organization_id])

  @@map("users")
}

model BalanceConfig {
  id                     String   @id @default(cuid())
  userId                 String   @unique
  minimumBalance         Decimal  @db.Decimal(10, 2)
  targetBalance          Decimal  @db.Decimal(10, 2)
  autoRechargeEnabled    Boolean  @default(true)
  defaultPaymentMethodId String?
  maxDailyRecharges      Int      @default(3)
  maxRechargeAmount      Decimal  @default(10000.00) @db.Decimal(10, 2)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("balance_configs")
}

model RechargeRecord {
  id                    String                     @id @default(cuid())
  userId                String?
  amount                Decimal                    @db.Decimal(10, 2)
  fee                   Decimal                    @db.Decimal(10, 2)
  totalCharged          Decimal                    @db.Decimal(10, 2)
  balanceBefore         Decimal                    @db.Decimal(10, 2)
  balanceAfter          Decimal                    @db.Decimal(10, 2)
  stripePaymentIntentId String                     @unique
  stripeStatus          String
  status                RechargeStatus             @default(PENDING)
  isAutomatic           Boolean                    @default(true)
  failureReason         String?
  createdAt             DateTime                   @default(now())
  updatedAt             DateTime                   @updatedAt
  c_organization_id     String?
  triggeredBy           String                     @default("manual")
  triggered_by_webhook  Boolean                    @default(false)
  webhook_event_id      String?
  organization          OrganizationBalanceConfig? @relation(fields: [c_organization_id], references: [c_organization_id])
  user                  User?                      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("recharge_records")
}

model DailyRechargeLimit {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime @db.Date
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, date])
  @@map("daily_recharge_limits")
}

model OrganizationBalanceConfig {
  id                        String                       @id @default(cuid())
  c_organization_id         String                       @unique
  stripe_customer_id        String?                      @unique
  litellm_team_id           String?                      @unique
  minimum_balance           Decimal                      @default(0) @db.Decimal(10, 2)
  target_balance            Decimal                      @default(1000) @db.Decimal(10, 2)
  auto_recharge_enabled     Boolean                      @default(true)
  default_payment_method_id String?
  max_daily_recharges       Int                          @default(5)
  minimum_recharge_amount   Decimal                      @default(100) @db.Decimal(10, 2)
  created_at                DateTime                     @default(now())
  updated_at                DateTime                     @updatedAt
  add_balance_up_to         Decimal                      @default(1000) @db.Decimal(10, 2)
  current_balance           Decimal                      @default(0) @db.Decimal(10, 2)
  least_balance             Decimal                      @default(0) @db.Decimal(10, 2)
  org_limit                 Decimal                      @default(10000) @db.Decimal(10, 2)
  auto_deduct_enabled       Boolean                      @default(false)
  balanceHistory            OrganizationBalanceHistory[]
  monthlyStats              OrganizationMonthlyStats[]
  rechargeRecords           RechargeRecord[]
  users                     User[]

  @@map("organization_balance_configs")
}

model OrganizationBalanceHistory {
  id                String                    @id @default(cuid())
  c_organization_id String
  balance_before    Decimal                   @db.Decimal(10, 2)
  balance_after     Decimal                   @db.Decimal(10, 2)
  change_amount     Decimal                   @db.Decimal(10, 2)
  change_type       String
  description       String?
  created_at        DateTime                  @default(now())
  organization      OrganizationBalanceConfig @relation(fields: [c_organization_id], references: [c_organization_id])

  @@map("organization_balance_history")
}

model OrganizationMonthlyStats {
  id                  String                    @id @default(cuid())
  c_organization_id   String
  year                Int
  month               Int
  balance_start_month Decimal                   @db.Decimal(10, 2)
  deposit_this_month  Decimal                   @default(0) @db.Decimal(10, 2)
  usage_this_month    Decimal                   @default(0) @db.Decimal(10, 2)
  balance_end_month   Decimal                   @db.Decimal(10, 2)
  created_at          DateTime                  @default(now())
  updated_at          DateTime                  @updatedAt
  organization        OrganizationBalanceConfig @relation(fields: [c_organization_id], references: [c_organization_id])

  @@unique([c_organization_id, year, month])
  @@map("organization_monthly_stats")
}

model WebhookEvent {
  id              String   @id @default(cuid())
  event_type      String
  team_id         String
  organization_id String?
  payload         Json
  processed       Boolean  @default(false)
  success         Boolean  @default(false)
  error_message   String?
  response_data   Json?
  created_at      DateTime @default(now())

  @@map("webhook_events")
}

enum RechargeStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
}
